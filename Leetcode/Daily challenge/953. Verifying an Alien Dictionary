953. Verifying an Alien Dictionary

***************** Time complexity - n^2 *******************
class Solution {
public:
    bool isAlienSorted(vector<string>& words, string order) {
        if(words.size()<2) return true;
        unordered_map<char,int> dic;
        for(int i=0;i<order.size();i++){
            dic[order[i]]=i+1;
        } 
        for(int i=0;i<words.size()-1;i++){
            for(int k=0;k<words[i].size();k++){
                if(dic[words[i][k]]<dic[words[i+1][k]]) break;;
                if(dic[words[i][k]]>dic[words[i+1][k]]) return false;
            }
        }
        return true;
    }
};


***************** Time complexity - n^3 *******************
class Solution {
public:
    bool isAlienSorted(vector<string>& words, string order) {
        if(words.size()<2) return true;
        unordered_map<char,int> dic;
        for(int i=0;i<order.size();i++){
            dic[order[i]]=i+1;
        } 
        for(int i=0;i<words.size();i++){
            int count=0;
            for(int j=i+1;j<words.size();j++){
                for(int k=0;k<words[i].size();k++){
                    if(dic[words[i][k]]<dic[words[j][k]]) {
                        count++;
                            if(count==words.size()-i) return true;
                        break;
                    }
                    if(dic[words[i][k]]>dic[words[j][k]]){
                        return false;
                    }
                }
            }
        }
        return true;
    }
};
