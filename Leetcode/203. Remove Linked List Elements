# Remove Linked List Elements

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeElements(ListNode* head, int val) {
        ListNode * temp=head;
        while(temp && temp->next){
            ListNode* next_node=temp->next;
            if(next_node->val==val){
                temp->next=next_node->next;
            }
            else{
                temp=next_node;
            }
        }
        if(head && head->val==val){
            return head->next;
        }
        return head;
    }
};


RECURSIVE 

class Solution {
public:
   ListNode* removeElements(ListNode* head, int val) {
       if(head==NULL){
            return head;
        }
        if( head->next!=NULL && (head->next)->val ==val){
            head->next=head->next->next;
        }
        head->next=removeElements(head->next,val);
        if(head!=NULL  && head->val == val ){
            head=head->next;
        }
        return head;
    }  
};
