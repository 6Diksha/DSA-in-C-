1721. Swapping Nodes in a Linked List



/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* swapNodes(ListNode* head, int k) {
        int n=size(head);
        ListNode* start=head;
        ListNode* end=head;
        for(int i=0;i<(k-1);i++){
            start=start->next;
        }
        for(int i=0;i<(n-k);i++){
            end=end->next;
        }
        int temp=start->val;
        start->val=end->val;
        end->val=temp;
        return head;
    }

    int size(ListNode* head){
        if(!head){
            return 0;
        }
        return size(head->next)+1;
    }
};
